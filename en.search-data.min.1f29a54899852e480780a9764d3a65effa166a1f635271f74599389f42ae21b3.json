[{"id":0,"href":"/docs/about/","title":"About","section":"Docs","content":" About # Website # This website uses the following tools and packages. The hard work and determination of developers and communities from all around the world are much appreciated.\nName Link License Hugo https://github.com/gohugoio/hugo Apache License 2.0 (more) Hugo Book https://github.com/alex-shpak/hugo-book MIT License (more) "},{"id":1,"href":"/docs/projects/electronics/arduino-eeprom-module/","title":"Arduino EEPROM Module","section":"Electronics","content":" Arduino EEPROM Module # This page is a placeholder for the Arduino EEPROM Module project. The project uses a Microchip 24LC64 EEPROM chip.\nWays of storing data # Storing data on the Arduino platform (or any other microcontroller-driven environment) can be achieved in multiple ways. The most straightforward one is to use EEPROM memory included in the microcontroller package. For example, the ATmega 328P chip, which drives the Arduino UNO model, can store up to 1024 B of data in EEPROM memory space. It may be enough and is easy to incorporate into any project, but one can not extend it or replace it in case of hardware failure because it is \u0026ldquo;baked\u0026rdquo; into the package.\nAnother way to store data could be an SD (Secure Digital) card in an external adapter. SD cards offer large capacities for not much money. It is possible to find libraries and frameworks that make it simple to use SD cards. Although SD cards might sound good and universal, they have some drawbacks. Using SD cards requires using specific data formatting. When storing simple data, one does not need it. It may really slow things down.\nIt is also possible to combine both approaches: having a fast, extendable, but also simple and cheap method of saving data. That leads to external EEPROM connected directly or through a shared bus (such as I2C). The use of the shared bus might seem quite ineffective, but it offers the possibility of including multiple EEPROM chips to create one address space. This hints target of the project - creating a shield for Arduino UNO board which includes external EEPROM chips. All chips will have their own configurable I2C bus addresses and dedicated memory address space.\n"},{"id":2,"href":"/docs/projects/electronics/arduino-sound-module/","title":"Arduino Sound Module","section":"Electronics","content":" Arduino Sound Module # This page is a placeholder for the Arduino Sound Module project. The project uses a Yamaha YM2149 sound synthesizer.\n"},{"id":3,"href":"/docs/projects/electronics/","title":"Electronics","section":"Projects","content":" Electronics # The electronics section includes various projects, which for example make use of microcontrollers, but that is not a rule. Sometimes these projects need soldering iron ready \u0026ndash; sometimes the microcontroller is enough.\nMicrocontrollers # A microcontroller is a one-chip solution for processor, memory (RAM, flash and/or EEPROM) and input/output interface. These chips are programmable using low-level programming languages (such as C, assembly, etc.). The hard work is always done by the compiler, which compiles the source code to target platform machine code. Microcontrollers are suitable for embedded systems, due to their features, usual low-power consumption and low manufacturing costs. Usually, these chips can be found in IoT (abbr. Internet of Things) projects, such as weather stations, smart home solutions or voice assistants.\nWhy are microcontrollers so popular? Mainly because they allow the creation of electronic projects with some kind of algorithms included to drive them. Microcontrollers can interact with physical switches, displays or LEDs and interface with a network at the same time. These capabilities make them useful for development (and prototyping) and even for production. To make it easy to start a development some software frameworks exist. Very popular is the Arduino framework. It is quite extensive, but also easy to learn and takes care of many \u0026ldquo;behind the scenes\u0026rdquo; events on the microcontroller. The new universal framework called Simba was published in 2015.\n"}]